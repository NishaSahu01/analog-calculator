#include <Arduino.h>
//Will perform Addition substraction and multiplication 
//Dhansiri Hostel
void setup() {
  Serial.begin(9600);
}

void loop() {
  Serial.println("Enter your mathematical expression:");
  
  while (!Serial.available()) {
    // Wait for user input
  }

  String expression = Serial.readStringUntil('\n');
  expression.trim();  // Remove leading and trailing whitespaces
  
  float result = evaluateExpression(expression);

  Serial.print("Result: ");
  Serial.println(result, 4);  // Display result with 4 decimal places
  
  delay(1000);  // Delay for readability
}

float evaluateExpression(String expression) {
  // Parse and evaluate the expression based on BODMAS rule
  float result = 0;

  // Perform operations in the order of BODMAS
  result = performMultiplication(expression);
  result = performAdditionAndSubtraction(expression);

  return result;
}

float performMultiplication(String expression) {
  // Perform multiplication and division operations
  float result = 0;
  char operation = '*';  // Default operation

  // Iterate through the characters of the expression
  for (int i = 0; i < expression.length(); i++) {
    char currentChar = expression.charAt(i);

    if (currentChar == '*') {
      operation = currentChar;
    } else if (isdigit(currentChar)) {
      // Parse the number
      float operand = currentChar - '0';

      // Keep reading the digits until a non-digit is encountered
      while (i + 1 < expression.length() && (isdigit(expression.charAt(i + 1)) || expression.charAt(i + 1) == '.')) {
        i++;
        if (expression.charAt(i) == '.') {
          // Handle decimal point
          operand += 0.1 * (expression.charAt(i + 1) - '0');
          i++;
        } else {
          operand = 10 * operand + (expression.charAt(i) - '0');
        }
      }

      // Perform multiplication or division based on the current operation
      if (operation == '*') {
        result *= operand;
      
      } else {
        // If no multiplication or division operation has been encountered yet, update the result
        result = operand;
      }
    }
  }

  return result;
}

float performAdditionAndSubtraction(String expression) {
  // Perform addition and subtraction operations
  float result = 0;
  char operation = '+';  // Default operation

  // Iterate through the characters of the expression
  for (int i = 0; i < expression.length(); i++) {
    char currentChar = expression.charAt(i);

    if (currentChar == '+' || currentChar == '-') {
      operation = currentChar;
    } else if (isdigit(currentChar)) {
      // Parse the number
      float operand = currentChar - '0';

      // Keep reading the digits until a non-digit is encountered
      while (i + 1 < expression.length() && (isdigit(expression.charAt(i + 1)) || expression.charAt(i + 1) == '.')) {
        i++;
        if (expression.charAt(i) == '.') {
          // Handle decimal point
          operand += 0.1 * (expression.charAt(i + 1) - '0');
          i++;
        } else {
          operand = 10 * operand + (expression.charAt(i) - '0');
        }
      }

      // Perform addition or subtraction based on the current operation
      if (operation == '+') {
        result += operand;
      } else if (operation == '-') {
        result -= operand;
      }
    }
  }

  return result;
}